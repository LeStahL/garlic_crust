@startuml simple

class sequencer <Sequencer> {
}

class osc_a <Oscillator> {
	- shape: WaveShapes::Saw
}

class osc_b <Oscillator> {
	- shape: WaveShapes::Square
}

class env_a <ADSREnvelope> {
	- attack: .1
	- decay: .1
	- sustain: .5
	- release: .1
}

class env_b <ADSREnvelope> {
	- attack: .5
	- decay: .3
	- sustain: .4
	- release: .2
}

class mix <Mixer> {
	- cv: .5
}

class output <Output> {
}

class lfo1 <Oscillator> {
	- shape: WaveShapes::Triangle
	- frequency: 12.
}

class filter <Filter> {
	- type: FilterTypes::LowPass
	- resonance: .5
}

class lfo_filter_transform <Math> {
	- mapping: "lfoTransform1.rs"
}

Sequencer "NoteOnOff1" *-- "on_off" env_a
Sequencer "NoteOnOff2" *-- "on_off" env_b
Sequencer "NoteFrequency1" *-- "frequency" osc_a
Sequencer "NoteFrequency2" *-- "frequency" osc_b

env_a "output" *-- "amplitude" osc_a
env_b "output" *-- "amplitude" osc_b
osc_a "output" *-- "input1" mix
osc_b "output" *-- "input2" mix
mix "output" *-- "input" filter

lfo1 "output" *-- "input" lfo_filter_transform
lfo_filter_transform "output" *-- "cutoff" filter
filter "output" *-- "input" output

@enduml
